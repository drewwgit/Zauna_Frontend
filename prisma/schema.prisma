// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String 
  email     String    @unique
  password  String 
  createdAt DateTime  @default(now())
  gymBookings    GymBooking[]
  saunaBookings  SaunaBooking[]
  orders         Order[]
}

model GymBooking {
  id        Int  @id @default(autoincrement())
  userId    Int 
  date      DateTime 
  timeSlot  String 
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id])
}

model SaunaRoom {
  id         Int       @id @default(autoincrement())
  roomNumber Int
  saunaBookings SaunaBooking[]
}

model SaunaBooking {
  id           Int      @id @default(autoincrement())
  userId       Int
  saunaRoomId  Int
  date         DateTime
  timeSlot     String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
  saunaRoom    SaunaRoom @relation(fields: [saunaRoomId], references: [id])
}

model MenuItem {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  available   Boolean
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orderItems  OrderItem[]
}

model Order {
  id          Int      @id @default(autoincrement())
  userId      Int
  totalPrice  Float
  status      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  orderItems  OrderItem[]
}

model OrderItem {
  id         Int      @id @default(autoincrement())
  orderId    Int
  menuItemId Int
  quantity   Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  order      Order    @relation(fields: [orderId], references: [id])
  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])
}